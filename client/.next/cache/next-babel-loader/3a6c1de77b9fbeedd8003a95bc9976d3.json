{"ast":null,"code":"var _jsxFileName = \"/app/components/Fib.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Fib = props => {\n  const {\n    0: seenIndexes,\n    1: setSeenIndexes\n  } = useState([]);\n  const {\n    0: values,\n    1: setValues\n  } = useState([]);\n  const {\n    0: index,\n    1: setIndex\n  } = useState('');\n  useEffect(() => {\n    fetchValues();\n    fetchIndexes();\n  }, []);\n\n  const fetchValues = async () => {\n    const values = await axios.get('/api/values/current');\n    setValues(values.data);\n  };\n\n  const fetchIndexes = async () => {\n    const seenIndexes = await axios.get('/api/values/all');\n    setSeenIndexes(seenIndexes.data);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    await axios.post('/api/values', {\n      index: index\n    });\n    setIndex('');\n  };\n\n  const renderSeenIndexes = () => {\n    return seenIndexes.map(({\n      number\n    }) => number).join(', ');\n  };\n\n  const renderValues = () => {\n    const entries = [];\n\n    for (let key in values) {\n      entries.push(__jsx(\"div\", {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }, \"For index \", key, \" I calculated \", values[key]));\n    }\n\n    return entries;\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"Enter your index:\"), __jsx(\"input\", {\n    value: index,\n    onChange: event => setIndex(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"Submit\")), __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Indexes I have seen:\"), renderSeenIndexes(), __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Calculated Values:\"), renderValues());\n};\n\nexport default Fib;","map":{"version":3,"sources":["/app/components/Fib.js"],"names":["React","useState","useEffect","axios","Fib","props","seenIndexes","setSeenIndexes","values","setValues","index","setIndex","fetchValues","fetchIndexes","get","data","handleSubmit","event","preventDefault","post","renderSeenIndexes","map","number","join","renderValues","entries","key","push","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AACjB,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM;AAAA,OAACO,MAAD;AAAA,OAASC;AAAT,MAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAACS,KAAD;AAAA,OAAQC;AAAR,MAAoBV,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,WAAW;AACXC,IAAAA,YAAY;AACf,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMD,WAAW,GAAG,YAAY;AAC5B,UAAMJ,MAAM,GAAG,MAAML,KAAK,CAACW,GAAN,CAAU,qBAAV,CAArB;AACAL,IAAAA,SAAS,CAACD,MAAM,CAACO,IAAR,CAAT;AACH,GAHD;;AAKA,QAAMF,YAAY,GAAG,YAAY;AAC7B,UAAMP,WAAW,GAAG,MAAMH,KAAK,CAACW,GAAN,CAAU,iBAAV,CAA1B;AACAP,IAAAA,cAAc,CAACD,WAAW,CAACS,IAAb,CAAd;AACH,GAHD;;AAKA,QAAMC,YAAY,GAAG,MAAMC,KAAN,IAAe;AAChCA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMf,KAAK,CAACgB,IAAN,CAAW,aAAX,EAA0B;AAC5BT,MAAAA,KAAK,EAAEA;AADqB,KAA1B,CAAN;AAIAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GARD;;AAUA,QAAMS,iBAAiB,GAAG,MAAM;AAC5B,WAAOd,WAAW,CAACe,GAAZ,CAAgB,CAAC;AAACC,MAAAA;AAAD,KAAD,KAAcA,MAA9B,EAAsCC,IAAtC,CAA2C,IAA3C,CAAP;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAG,MAAM;AACvB,UAAMC,OAAO,GAAG,EAAhB;;AAEA,SAAK,IAAIC,GAAT,IAAgBlB,MAAhB,EAAwB;AACpBiB,MAAAA,OAAO,CAACE,IAAR,CACI;AAAK,QAAA,GAAG,EAAED,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACeA,GADf,oBACkClB,MAAM,CAACkB,GAAD,CADxC,CADJ;AAKH;;AAED,WAAOD,OAAP;AACH,GAZD;;AAcA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,QAAQ,EAAET,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAO,IAAA,KAAK,EAAEN,KAAd;AAAqB,IAAA,QAAQ,EAAEO,KAAK,IAAIN,QAAQ,CAACM,KAAK,CAACW,MAAN,CAAaC,KAAd,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,CADJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAPJ,EAQKT,iBAAiB,EARtB,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAVJ,EAWKI,YAAY,EAXjB,CADJ;AAeH,CA/DD;;AAiEA,eAAepB,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst Fib = props => {\r\n    const [seenIndexes, setSeenIndexes] = useState([])\r\n    const [values, setValues] = useState([])\r\n    const [index, setIndex] = useState('')\r\n\r\n    useEffect(() => {\r\n        fetchValues()\r\n        fetchIndexes()\r\n    }, [])\r\n\r\n    const fetchValues = async () => {\r\n        const values = await axios.get('/api/values/current')\r\n        setValues(values.data)\r\n    }\r\n\r\n    const fetchIndexes = async () => {\r\n        const seenIndexes = await axios.get('/api/values/all')\r\n        setSeenIndexes(seenIndexes.data)\r\n    }\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault()\r\n\r\n        await axios.post('/api/values', {\r\n            index: index\r\n        })\r\n\r\n        setIndex('')\r\n    }\r\n\r\n    const renderSeenIndexes = () => {\r\n        return seenIndexes.map(({number}) => number).join(', ')\r\n    }\r\n\r\n    const renderValues = () => {\r\n        const entries = []\r\n\r\n        for (let key in values) {\r\n            entries.push(\r\n                <div key={key}>\r\n                    For index {key} I calculated {values[key]}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return entries\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>Enter your index:</label>\r\n                <input value={index} onChange={event => setIndex(event.target.value)} />\r\n                <button>Submit</button>\r\n            </form>\r\n\r\n            <h3>Indexes I have seen:</h3>\r\n            {renderSeenIndexes()}\r\n\r\n            <h3>Calculated Values:</h3>\r\n            {renderValues()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Fib"]},"metadata":{},"sourceType":"module"}