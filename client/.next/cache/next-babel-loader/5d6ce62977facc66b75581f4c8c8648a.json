{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/app/components/Fib.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nvar Fib = function Fib(props) {\n  _s();\n\n  var _useState = useState([]),\n      seenIndexes = _useState[0],\n      setSeenIndexes = _useState[1];\n\n  var _useState2 = useState([]),\n      values = _useState2[0],\n      setValues = _useState2[1];\n\n  var _useState3 = useState(''),\n      index = _useState3[0],\n      setIndex = _useState3[1];\n\n  useEffect(function () {\n    fetchValues();\n    fetchIndexes();\n  }, []);\n\n  var fetchValues = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var values;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get('/api/values/current');\n\n            case 2:\n              values = _context.sent;\n              setValues(values.data);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchValues() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var fetchIndexes = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var seenIndexes;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return axios.get('/api/values/all');\n\n            case 2:\n              seenIndexes = _context2.sent;\n              setSeenIndexes(seenIndexes.data);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function fetchIndexes() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              event.preventDefault();\n              _context3.next = 3;\n              return axios.post('/api/values', {\n                index: index\n              });\n\n            case 3:\n              setIndex('');\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var renderSeenIndexes = function renderSeenIndexes() {\n    return seenIndexes.map(function (_ref4) {\n      var number = _ref4.number;\n      return number;\n    }).join(', ');\n  };\n\n  var renderValues = function renderValues() {\n    var entries = [];\n\n    for (var key in values) {\n      entries.push(__jsx(\"div\", {\n        key: key,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }, \"For index \", key, \" I calculated \", values[key]));\n    }\n\n    return entries;\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"Enter your index:\"), __jsx(\"input\", {\n    value: index,\n    onChange: function onChange(event) {\n      return setIndex(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"Submit\")), __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Indexes I have seen:\"), renderSeenIndexes(), __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Calculated Values:\"), renderValues());\n};\n\n_s(Fib, \"4hxufxKkKKwAO0aHiX/Bl8Uu3DU=\");\n\n_c = Fib;\nexport default Fib;\n\nvar _c;\n\n$RefreshReg$(_c, \"Fib\");","map":{"version":3,"sources":["/app/components/Fib.js"],"names":["React","useState","useEffect","axios","Fib","props","seenIndexes","setSeenIndexes","values","setValues","index","setIndex","fetchValues","fetchIndexes","get","data","handleSubmit","event","preventDefault","post","renderSeenIndexes","map","number","join","renderValues","entries","key","push","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst Fib = props => {\r\n    const [seenIndexes, setSeenIndexes] = useState([])\r\n    const [values, setValues] = useState([])\r\n    const [index, setIndex] = useState('')\r\n\r\n    useEffect(() => {\r\n        fetchValues()\r\n        fetchIndexes()\r\n    }, [])\r\n\r\n    const fetchValues = async () => {\r\n        const values = await axios.get('/api/values/current')\r\n        setValues(values.data)\r\n    }\r\n\r\n    const fetchIndexes = async () => {\r\n        const seenIndexes = await axios.get('/api/values/all')\r\n        setSeenIndexes(seenIndexes.data)\r\n    }\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault()\r\n\r\n        await axios.post('/api/values', {\r\n            index: index\r\n        })\r\n\r\n        setIndex('')\r\n    }\r\n\r\n    const renderSeenIndexes = () => {\r\n        return seenIndexes.map(({number}) => number).join(', ')\r\n    }\r\n\r\n    const renderValues = () => {\r\n        const entries = []\r\n\r\n        for (let key in values) {\r\n            entries.push(\r\n                <div key={key}>\r\n                    For index {key} I calculated {values[key]}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return entries\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>Enter your index:</label>\r\n                <input value={index} onChange={event => setIndex(event.target.value)} />\r\n                <button>Submit</button>\r\n            </form>\r\n\r\n            <h3>Indexes I have seen:</h3>\r\n            {renderSeenIndexes()}\r\n\r\n            <h3>Calculated Values:</h3>\r\n            {renderValues()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Fib"]},"metadata":{},"sourceType":"module"}